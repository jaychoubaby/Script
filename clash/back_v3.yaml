#---------------------------------------------------#
## 配置文件需要放置在 $HOME/.config/clash/config.yml
##
## 如果您不知道如何操作，请参阅 SS-Rule-Snippet 的 Wiki：
## https://github.com/Hackl0us/SS-Rule-Snippet/wiki/clash(X)
#---------------------------------------------------#

##### 使用说明 #####
# 1. 请填写 proxy-providers - subscribe - url 为订阅链接
# 2. 下载 https://github.com/Loyalsoldier/clash-rules/archive/refs/heads/release.zip 并解压至 ./profiles/ruleset 文件夹下
# 3. 若需要自动更新 ruleset, 请编辑 rule-providers 下各项 type 为 http

##### 参考链接 #####
# 1. clash 样例配置文件
#    https://lancellc.gitbook.io/clash/clash-config-file/an-example-configuration-file
# 2. clash 规则集
#    https://github.com/Loyalsoldier/clash-rules
# 3. clash 自定义配置教程
#    https://donnadie.top/manage-clashx-custom-config/
# 4. clash 自定义配置样例
#    https://gist.github.com/ricky9w/31fffc1b6eadadba2603f323dc92bebf
# 5. clash 自动替换订阅规则
#    https://github.com/Fndroid/clash_for_windows_pkg/issues/2193

# HTTP 代理端口
port: 1080

# SOCKS5 代理端口
socks-port: 7891

# Linux 和 macOS 的 redir 透明代理端口 (重定向 TCP 和 TProxy UDP 流量)
# redir-port: 7892

# Linux 的透明代理端口（适用于 TProxy TCP 和 TProxy UDP 流量)
# tproxy-port: 7893

# HTTP(S) and SOCKS5 共用端口
# mixed-port: 7890

# 本地 SOCKS5/HTTP(S) 服务验证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# 允许局域网的连接（可用来共享代理）
allow-lan: true
bind-address: "*"
# 此功能仅在 allow-lan 设置为 true 时生效，支持三种参数：
# "*"                           绑定所有的 IP 地址
# 192.168.122.11                绑定一个的 IPv4 地址
# "[aaaa::a8aa:ff:fe09:57d8]"   绑定一个 IPv6 地址

# Clash 路由工作模式
# 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）
mode: rule

# Clash 默认将日志输出至 STDOUT
# 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / info / warning / error / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。
log-level: info

# clash 的 RESTful API 监听地址
external-controller: 127.0.0.1:9090

# 存放配置文件的相对路径，或存放网页静态资源的绝对路径
# Clash core 将会将其部署在 http://{{external-controller}}/ui
# external-ui: folder

# RESTful API 的口令 (可选)
# 通过 HTTP 头中 Authorization: Bearer ${secret} 参数来验证口令
# 当 RESTful API 的监听地址为 0.0.0.0 时，请务必设定口令以保证安全
# secret: ""

# 出站网卡接口
# interface-name: en0

# DNS 服务器和建立连接时的 静态 Hosts, 仅在 dns.enhanced-mode 模式为 redir-host 生效
# 支持通配符域名 (例如: *.clash.dev, *.foo.*.example.com )
# 不使用通配符的域名优先级高于使用通配符的域名 (例如: foo.example.com > *.example.com > .example.com )
# 注意: +.foo.com 的效果等同于 .foo.com 和 foo.com
hosts:
 'translate.googleapis.com' : 220.181.174.162 
 'translate.google.com' : 220.181.174.162 
 'github.com' : 20.205.243.166
# '*.clash.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.clash.dev': '::1'

# DNS 服务器配置(可选；若不配置，程序内置的 DNS 服务会被关闭)
dns:
  enable: true
  listen: 0.0.0.0:53
  ipv6: false # 当此选项为 false 时, AAAA 请求将返回空

  # 以下填写的 DNS 服务器将会被用来解析 DNS 服务的域名
  # 仅填写 DNS 服务器的 IP 地址
  default-nameserver:
    - 223.5.5.5
    - 114.114.114.114
  enhanced-mode: fake-ip # 或 redir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 (CIDR 形式)
  # use-hosts: true # 查询 hosts 并返回 IP 记录

  # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址
  fake-ip-filter:
    # 以下域名列表参考自 vernesong/OpenClash 项目，并由 Hackl0us 整理补充
    # === LAN ===
    - '*.lan'
    # === Linksys Wireless Router ===
    - '*.linksys.com'
    - '*.linksyssmartwifi.com'
    # === Apple Software Update Service ===
    - 'swscan.apple.com'
    - 'mesu.apple.com'
    # === Windows 10 Connnect Detection ===
    - '*.msftconnecttest.com'
    - '*.msftncsi.com'
    # === NTP Service ===
    - 'time.*.com'
    - 'time.*.gov'
    - 'time.*.edu.cn'
    - 'time.*.apple.com'

    - 'time1.*.com'
    - 'time2.*.com'
    - 'time3.*.com'
    - 'time4.*.com'
    - 'time5.*.com'
    - 'time6.*.com'
    - 'time7.*.com'

    - 'ntp.*.com'
    - 'ntp.*.com'
    - 'ntp1.*.com'
    - 'ntp2.*.com'
    - 'ntp3.*.com'
    - 'ntp4.*.com'
    - 'ntp5.*.com'
    - 'ntp6.*.com'
    - 'ntp7.*.com'

    - '*.time.edu.cn'
    - '*.ntp.org.cn'
    - '+.pool.ntp.org'

    - 'time1.cloud.tencent.com'
    # === Music Service ===
    ## NetEase
    - '+.music.163.com'
    - '*.126.net'
    ## Baidu
    - 'musicapi.taihe.com'
    - 'music.taihe.com'
    ## Kugou
    - 'songsearch.kugou.com'
    - 'trackercdn.kugou.com'
    ## Kuwo
    - '*.kuwo.cn'
    ## JOOX
    - 'api-jooxtt.sanook.com'
    - 'api.joox.com'
    - 'joox.com'
    ## QQ
    - '+.y.qq.com'
    - '+.music.tc.qq.com'
    - 'aqqmusic.tc.qq.com'
    - '+.stream.qqmusic.qq.com'
    ## Xiami
    - '*.xiami.com'
    ## Migu
    - '+.music.migu.cn'
    # === Game Service ===
    ## Nintendo Switch
    - '+.srv.nintendo.net'
    ## Sony PlayStation
    - '+.stun.playstation.net'
    ## Microsoft Xbox
    - 'xbox.*.microsoft.com'
    - '+.xboxlive.com'
    # === Other ===
    ## QQ Quick Login
    - 'localhost.ptlogin2.qq.com'
    ## Golang
    - 'proxy.golang.org'
    ## STUN Server
    - 'stun.*.*'
    - 'stun.*.*.*'


    ## Bilibili CDN
    - '*.mcdn.bilivideo.cn'

  # 支持 UDP / TCP / DoT / DoH 协议的 DNS 服务，可以指明具体的连接端口号。
  # 所有 DNS 请求将会直接发送到服务器，不经过任何代理。
  # Clash 会使用最先获得的解析记录回复 DNS 请求
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

  # 当 fallback 参数被配置时, DNS 请求将同时发送至上方 nameserver 列表和下方 fallback 列表中配置的所有 DNS 服务器.
  # 当解析得到的 IP 地址的地理位置不是 CN 时，clash 将会选用 fallback 中 DNS 服务器的解析结果。
  # fallback:
  #   - https://dns.google/dns-query

  # 如果使用 nameserver 列表中的服务器解析的 IP 地址在下方列表中的子网中，则它们被认为是无效的，
  # Clash 会选用 fallback 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 true 且 IP 地址的地理位置为 CN 时，
  # Clash 会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 false, 如果解析结果不在 fallback-filter.ipcidr 范围内，
  # Clash 总会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 采取以上逻辑进行域名解析是为了对抗 DNS 投毒攻击。
  fallback-filter:
    geoip: false
    ipcidr:
      - 240.0.0.0/4
      - 0.0.0.0/32
    # domain:
    #   - '+.google.com'
    #   - '+.facebook.com'
    #   - '+.youtube.com'

proxies:
  - name: /
    type: trojan
    # interface-name: eth0
    # routing-mark: 1234
    server: /
    port: 443
    password: "/"
    network: ws
    sni: /
    # skip-cert-verify: true
    udp: true
    ws-opts:
      path: //
      headers:
        Host: /
  - name: "jay-vmess"
    type: vmess
    server: /
    port: /
    uuid: /
    alterId: 0
    cipher: auto
    network: http
  - name: back-trojan
    type: trojan
    # interface-name: eth0
    # routing-mark: 1234
    server: /
    port: /
    password: "/"
    network: ws
    sni: /
    # skip-cert-verify: true
    udp: true
    ws-opts:
      path: //
      headers:
        Host: /
  - name: "back-vmess"
    type: vmess
    server: /
    port: /
    uuid: /
    alterId: 0
    cipher: auto
    network: http
  
# 存放于 ./profiles/proxies 文件夹下  
proxy-providers:
  subscribe-hw:
    type: http
    # 订阅链接, 订阅文件应当为 yaml 格式, 否则应当进行订阅转换
    # url: "https://sub.xeton.dev/sub?target=clash&url=https%3A%2F%2Fmojie.best%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3Df5e261176ea6d029c377b61449483747"
    url: "/"
    interval: 172800
    path: ./profiles/proxies/subscribe-hw.yaml
    health-check:
      # 选中时是否进行测试
      enable: true
      interval: 600
      # lazy: true
      url: http://www.gstatic.com/generate_204  
  subscribe-back:
    type: http
    # 订阅链接, 订阅文件应当为 yaml 格式, 否则应当进行订阅转换
    # url: "https://sub.xeton.dev/sub?target=clash&url=https%3A%2F%2Fmojie.best%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3Df5e261176ea6d029c377b61449483747"
    url: "/"
    interval: 172800
    path: ./profiles/proxies/subscribe-back.yaml
    health-check:
      # 选中时是否进行测试
      enable: true
      interval: 600
      # lazy: true
      url: http://www.gstatic.com/generate_204
  
proxy-groups:
  # select 用来允许用户手动选择 代理服务器 或 服务器组
  # 您也可以使用 RESTful API 去切换服务器，这种方式推荐在 GUI 中使用
  - name: PROXY
    type: select
    proxies:
      - jay-trojan
      - jay-vmess
      - back-trojan
      - back-vmess
      - SUBSCRIBE-HW
      - SUBSCRIBE-BACK
      - AUTO

  # 手动选择订阅节点
  - name: SUBSCRIBE-HW
    type: select
    use:
      - subscribe-hw
  # 手动选择订阅节点
  - name: SUBSCRIBE-BACK
    type: select
    use:
      - subscribe-back

  # 自动选择订阅节点
  - name: AUTO
    type: url-test
    use:
      - subscribe-hw
      - subscribe-back


  

# https://github.com/Loyalsoldier/clash-rules 简洁明了，注意需要设置为 behavior: domain
# https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash 非常全面，behavior: classical
# https://github.com/DivineEngine/Profiles/tree/master/Clash/RuleSet 知名选择，behavior: classical
# 这些规则集提供的 http://vainglory.cf/https://raw.githubusercontent.com 地址在国内通常无法访问，只需要在前面加上 https://ghproxy.com/，
# 组成 https://ghproxy.com/http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt  

# 注意: 该功能需要 clash premium 支持
# 使用 clash-rules 提供的规则, 存放于 ./profiles/ruleset 文件夹下
# https://github.com/Loyalsoldier/clash-rules
rule-providers:

  # 直连域名列表 direct.txt
  direct:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt"
    path: ./ruleset/direct.yaml
    interval: 86400

  # 代理域名列表 proxy.txt
  proxy:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt"
    path: ./ruleset/proxy.yaml
    interval: 86400

  # 广告域名列表 reject.txt
  reject:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 86400

  # 私有网络专用域名列表 private.txt
  private:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt"
    path: ./ruleset/private.yaml
    interval: 86400

  # Apple 在中国大陆可直连的域名列表 apple.txt
  apple:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt"
    path: ./ruleset/apple.yaml
    interval: 86400

  # iCloud 域名列表 icloud.txt
  icloud:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt"
    path: ./ruleset/icloud.yaml
    interval: 86400

  # [慎用]Google 在中国大陆可直连的域名列表 google.txt
  google:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt"
    path: ./ruleset/google.yaml
    interval: 86400

  # GFWList 域名列表 gfw.txt
  gfw:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt"
    path: ./ruleset/gfw.yaml
    interval: 86400

  # 非中国大陆使用的顶级域名列表 tld-not-cn.txt
  tld-not-cn:
    type: http
    behavior: domain
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml
    interval: 86400

  # Telegram 使用的 IP 地址列表 telegramcidr.txt
  telegramcidr:
    type: http
    behavior: ipcidr
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    interval: 86400

  # 局域网 IP 及保留 IP 地址列表 lancidr.txt
  lancidr:
    type: http
    behavior: ipcidr
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 86400

  # 中国大陆 IP 地址列表 cncidr.txt
  cncidr:
    type: http
    behavior: ipcidr
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    interval: 86400  
  
  # 需要直连的常见软件列表 applications.txt
  applications:
    type: http
    behavior: classical
    url: "http://vainglory.cf/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt"
    path: ./ruleset/applications.yaml
    interval: 86400

rules:
  - IP-CIDR,131.186.45.20/32,PROXY
  - IP-CIDR,138.2.3.27/32,PROXY
  - RULE-SET,applications,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,REJECT
  - RULE-SET,icloud,DIRECT
  - RULE-SET,apple,DIRECT
  - RULE-SET,google,PROXY
  - RULE-SET,proxy,PROXY
  - RULE-SET,direct,DIRECT
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,telegramcidr,PROXY
  - GEOIP,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,PROXY

